# This file contains pin mappings for the LDO Nitehawk-36 Toolboard
# To use this config, the firmware should be compiled for the Raspberry Pi RP2040
# Make sure to include this config *at the end* of printer.cfg to overwrite the relevent sections

# See https://docs.ldomotors.com/en/Toolboard/nitehawk-36#firmware-setup-and-update
# For instructions on uploading/updating klipper firmware to the PCB

## LDO Nitehawk-SB Toolboard Partial Config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] sections

## *MAKE SURE* to include this partial config file *AFTER* the main controller config. 
## This will ensure the relavent sections are overwritten by the pin mappings specified here.

[mcu nhk]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_rp2040_3033393834059848-if00
restart_method: command
##--------------------------------------------------------------------

#####################################################################
#   Endstops
#####################################################################
## XES - Toolhead PCB
#[stepper_x]
#endstop_pin: nhk:gpio13


#####################################################################
#   Filament Sensor
#####################################################################
#[filament_switch_sensor filament_sensor]
#switch_pin: nhk:gpio3
#pause_on_runout: True

#####################################################################
#   Extruder
#####################################################################
[extruder]
step_pin: nhk:gpio23
dir_pin: !nhk:gpio24
enable_pin: !nhk:gpio25
microsteps: 16
rotation_distance: 35.2												#Be sure to calibrate
gear_ratio: 44:8, 25:17
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: nhk:gpio9
sensor_type: Generic 3950
sensor_pin: nhk:gpio29
pullup_resistor: 2200
min_temp: 0
max_temp: 315
min_extrude_temp: 170
max_extrude_only_distance: 1000                                     
max_extrude_cross_section: 30                                       
pressure_advance: 0.052                                             #Be sure to calibrate
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
sense_resistor: 0.100
uart_pin: nhk:gpio0
tx_pin: nhk:gpio1
interpolate: false
run_current: 0.45                        #.45 minimum offers 12N of force. DO NOT EXCEED .55A as it will cause excess heat.

#####################################################################
#   Fans
#####################################################################
## PCF
[fan]
pin: nhk:gpio6
kick_start_time: .3
off_below: 0.1


## HEF
[heater_fan hotend_fan]
pin: nhk:gpio5
tachometer_pin: nhk:gpio16
tachometer_ppr: 2
max_power: 1.0
kick_start_time: .1
heater: extruder
heater_temp: 50.0
fan_speed: .6

#####################################################################
# 	Probe
#####################################################################
## Probe Port
#[probe]
#pin: nhk:gpio10



#####################################################################
#   Accelerometer
#####################################################################
[adxl345]
cs_pin: nhk:gpio27
spi_software_sclk_pin: nhk:gpio18
spi_software_mosi_pin: nhk:gpio20
spi_software_miso_pin: nhk:gpio19

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 100
sweeping_accel: 400
sweeping_period: 0
probe_points: 175, 175, 20

#####################################################################
#   Addtional Sensors
#####################################################################
[temperature_sensor NH36]
sensor_type: temperature_mcu
sensor_mcu: nhk
min_temp: 0
max_temp: 100


# Based on the Stealthburner LED Effects
# Macros for setting the status leds for any neopixel-type leds).
#
# This macro requires LED EFFECTS to be installed found at https://github.com/julianschill/klipper-led_effect
#
# Use this file for the standard setup with one logo LED and two nozzle LEDs.
# Thank you to Urufu_Shinjiro and ChristianN for providing this file.


#####################################
#           INSTRUCTIONS            #
#####################################
# How to use all this stuff:
#
#     1.  Copy this .cfg file into your Klipper config directory and then add [include jw_led_effects_3_leds.cfg]
#         to the top of your printer.cfg in order for register the LEDs and macros with Klipper.
#     2.  Define your LEDs by editing [neopixel jw_leds] below and entering the data pin from your control board
#         as well as the color order.
#
#           Note: RGB and RGBW are different and must be defined explicitly in the color order. 
#
#                 RGBW LEDs will have a visible yellow-ish phosphor section to the chip.  If your LEDs do not have
#                 this yellow portion, you have RGB LEDs.
#
#     3.  Save your config and restart Klipper.
#
#           Note: We set RED and BLUE to 1.0 to make it easier for users and supporters to detect 
#                 misconfigurations or miswiring. The default color format is for Neopixels with a dedicated 
#                 white LED. On startup, all three jw LEDs should light up.
#
#                 If you get random colors across your LEDs, change the color_order to GRB and restart. Then
#                 omit the W for each suggested color_order in the next paragraph.
#
#                 If you get MAGENTA, your  color order is correct. If you get CYAN, you need to use RGBW. If
#                 you get YELLOW, you need to use BRGW (note that BRG is only supported in the latest Klipper
#                 version).
#
#     4.  Once you have confirmed that the LEDs are set up correctly, you must now decide where you want 
#         these macros called up...which means adding them to your existing gcode macros.  NOTHING will happen
#         unless you add the STATUS_????? macros to your existing gcode macros.  
#
#           Example: add STATUS_LEVELING to the beginning of your QGL gcode macro, and then add STATUS_READY 
#                    to the end of it to set the logo LED and nozzle LEDs back to the `ready` state.
#
#           Example: add STATUS_CLEANING to the beginning of your nozzle-cleaning macro, and then STATUS_READY
#                    to the end of it to return the LEDs back to `ready` state.
#
#     5.  Feel free to change colors of each macro, create new ones if you have a need to.  The macros provided below
#         are just an example of what is possible.  If you want to try some more complex animations, you will most
#         likely have to use WLED with Moonraker and a small micro-controller (please see the LED thread for help inside
#         of the stealthburner_beta channel on Discord).
#
#####################################
#       END INSTRUCTRUCTIONS        #
#####################################

##################
# LED ASSIGNMENT #
##################

[neopixel jw_leds]
pin: nhk:gpio7
chain_count: 3
color_order: GRBW
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0
initial_WHITE: 0.0

##########################
# LED Effects Animations #
##########################

##################
## logo effects ##
##################

[led_effect jw_logo_busy]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (3)
layers:
    breathing  3 1 top (1,0,0)

[led_effect jw_logo_cleaning]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (3)
layers:
    breathing  3 1 top (0.0, 0.02, 0.5, 0)

[led_effect jw_logo_calibrating_z]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (3)
layers:
        breathing  3 1 top (0.0, 0.0, 0.35, 0)

[led_effect jw_logo_heating]
leds:
    neopixel:jw_leds (3)
autostart:                          false
frame_rate:                         24
layers:
     breathing  3 1 top (1, 0.18, 0, 0)

[led_effect jw_logo_cooling]
leds:
    neopixel:jw_leds (3)
autostart:                          false
frame_rate:                         24
layers:
     breathing  3 1 top (0, 0, 1, 0)

[led_effect jw_logo_homing]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (3)
layers:
        breathing  3 1 top (0.0, 0.6, 0.2, 0)

[led_effect jw_logo_leveling]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (3)
layers:
        breathing  3 1 top (0.5, 0.1, 0.4, 0)

[led_effect jw_logo_meshing]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (3)
layers:
        breathing  3 1 top (0.2, 1.0, 0.0, 0)

[led_effect jw_logo_printing]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (3)
layers:
    gradient  0.3  1 add (0.3, 0.0, 0.0, 0),(0.3, 0.3, 0.0, 0),(0.3, 0.1, 0.0, 0)

[led_effect jw_logo_standby]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (3)
layers:
        breathing  3 1 top (0.01, 0.01, 0.01, 0)

[led_effect jw_logo_part_ready]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (3)
layers:
        breathing  3 1 top (0.0, 1.0, 0.0, 0)

####################
## nozzle effects ##
####################

[led_effect jw_nozzle_heating]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (1,2)
layers:
        breathing  3 1 top (1.0, 0.18, 0.0, 0.0)

[led_effect jw_nozzle_cooling]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (1,2)
layers:
        breathing  3 1 top (0.0, 0.0, 1.0, 0.1)

[led_effect jw_nozzle_standby]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (1,2)
layers:
        breathing  3 1 top (0.6, 0.0, 0.0, 0.0)

[led_effect jw_nozzle_part_ready]
autostart:              false
frame_rate:             24
leds:
    neopixel:jw_leds (1,2)
layers:
        breathing  3 1 top (0.6, 1.0, 0.0, 0.1)


#####################
## all led effects ##
#####################

[led_effect jw_critical_error]
leds:
    neopixel:jw_leds
layers:
    strobe         1  1.5   add        (1.0,  1.0, 1.0, 1.0)
    breathing      2  0     difference (0.95, 0.0, 0.0, 0)
    static         1  0     top        (1.0,  0.0, 0.0, 0)
autostart:                             false
frame_rate:                            24
run_on_error:                          true

[led_effect rainbow]
leds:
    neopixel:jw_leds
autostart:                          true
frame_rate:                         24
layers:
    gradient  0.3  1 add (0.3, 0.0, 0.0, 0.0),(0.0, 0.3, 0.0, 0.0),(0.0, 0.0, 0.3, 0.0)


#######################
# LED Effects Statics #
#######################

[led_effect set_nozzle_leds]
leds:
    neopixel:jw_leds (1,2)

autostart:                          false
frame_rate:                         24
layers:
    static         0  0     top        (1, 1, 1, 1)

[led_effect set_logo_leds]
leds:
    neopixel:jw_leds (3)
autostart:                          false
frame_rate:                         24
layers:
    static         0  0     top        (.5, .5, .5)

##############
# The Macros #
##############
#     Reminder!
#         Once you have confirmed that the LEDs are set up correctly, you must now decide where you want 
#         these macros called up...which means adding them to your existing gcode macros.  NOTHING will happen
#         unless you add the STATUS_????? macros to your existing gcode macros.  
#
#           Example: add STATUS_LEVELING to the beginning of your QGL gcode macro, and then add STATUS_READY 
#                    to the end of it to set the logo LED and nozzle LEDs back to the `ready` state.
#
#           Example: add STATUS_CLEANING to the beginning of your nozzle-cleaning macro, and then STATUS_READY
#                    to the end of it to return the LEDs back to `ready` state.

[gcode_macro set_logo_leds_off]
gcode:
    SET_LED_EFFECT EFFECT=set_logo_leds STOP=1

[gcode_macro set_logo_leds_on]
gcode:
    SET_LED_EFFECT EFFECT=set_logo_leds

[gcode_macro set_nozzle_leds_on]
gcode:
    SET_LED_EFFECT EFFECT=set_nozzle_leds

[gcode_macro set_nozzle_leds_off]
gcode:
    SET_LED_EFFECT EFFECT=set_nozzle_leds STOP=1

[gcode_macro status_off]
gcode:
    STOP_LED_EFFECTS

[gcode_macro status_ready]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=rainbow

[gcode_macro status_part_ready]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=jw_nozzle_part_ready
    SET_LED_EFFECT EFFECT=jw_logo_part_ready

[gcode_macro status_busy]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=jw_logo_busy
    set_nozzle_leds_on

[gcode_macro status_heating]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=jw_logo_heating
    SET_LED_EFFECT EFFECT=jw_nozzle_heating

[gcode_macro status_cooling]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=jw_logo_cooling
    SET_LED_EFFECT EFFECT=jw_nozzle_cooling


[gcode_macro status_leveling]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=jw_logo_leveling
    set_nozzle_leds_on

[gcode_macro status_homing]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=jw_logo_homing
    set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=jw_logo_cleaning
    set_nozzle_leds_on

[gcode_macro status_meshing]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=jw_logo_meshing
    set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=jw_logo_calibrating_z
    set_nozzle_leds_on

[gcode_macro status_printing]
gcode:
    STOP_LED_EFFECTS
    SET_LED_EFFECT EFFECT=jw_logo_printing
    set_nozzle_leds_on
